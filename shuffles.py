def byte_shuffle(data):
    b = 0x00  # Инициализация переменной b нулевым значением
    shuffled_data = []  # Инициализация списка для хранения переставленных данных
    for byte in data:  # Проход по каждому байту в исходных данных
        b = (b + byte) % 0xFFF  # Вычисление нового значения b с учетом текущего байта
        shuffled_data.append(b)  # Добавление нового значения b в список переставленных данных
    return shuffled_data  # Возврат списка переставленных данных


def byte_unshuffle(data):
    b = 0x00  # Инициализация переменной b нулевым значением
    unshuffled_data = []  # Инициализация списка для хранения обратно переставленных данных
    for byte in data:  # Проход по каждому байту в переставленных данных
        current = byte  # Сохранение текущего значения байта
        byte = (byte - b + 0xFFF) % 0xFFF  # Обратная операция перестановки с учетом предыдущего значения b
        unshuffled_data.append(byte)  # Добавление обратно переставленного байта в список
        b = current  # Обновление значения b для следующей итерации
    return unshuffled_data  # Возврат списка обратно переставленных данных
